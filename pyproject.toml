[project]
name = "educationplatform"
version = "0.1.0"
description = "API for your education platform"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.1",
    "asyncpg>=0.30.0",
    "bcrypt==3.2.2",
    "coverage>=7.9.1",
    "envparse>=0.2.0",
    "fastapi>=0.115.12",
    "httpx>=0.28.1",
    "mypy>=1.16.0",
    "passlib>=1.7.4",
    "pre-commit>=4.2.0",
    "psycopg2-binary>=2.9.10",
    "pydantic>=2.11.5",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "python-jose>=3.5.0",
    "python-multipart>=0.0.20",
    "sentry-sdk[fastapi]>=2.31.0",
    "sqlalchemy[mypy]>=2.0.41",
    "starlette-exporter>=0.23.0",
    "types-passlib>=1.7.7.20250602",
    "uvicorn>=0.34.3",
]

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]
strict = true
local_partial_types = true
warn_unreachable = true

[tool.ruff]
line-length = 80
target-version = "py313"

exclude = [
    "migrations",
    ".venv",
    ".qodo",
    "build",
    "dist",
    "tests/fixtures",
    "__pycache__",
]

[tool.ruff.format]
quote-style = "single"
docstring-code-format = false

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
  "S101", # asserts
  "S105", # hardcoded passwords
  "S404", # subprocess calls are for tests
  "S603", # do not require `shell=True`
  "S607", # partial executable paths
]

[tool.ruff.lint]
select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # maccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",    # pycodestyle
  "ERA",  # flake8-eradicate
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FBT",  # flake8-boolean-trap
  "FLY",  # pyflint
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-naming
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "S",    # flake8-bandit
  "SIM",  # flake8-simpify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T100", # flake8-debugger
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
