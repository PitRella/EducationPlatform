"""create_payment_model

Revision ID: f504084a606c
Revises: 6386c946bf2a
Create Date: 2025-08-29 21:07:14.064085

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f504084a606c'
down_revision: Union[str, None] = '6386c946bf2a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payments',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='User who made the payment'),
    sa.Column('course_id', sa.UUID(), nullable=False, comment='Course being purchased'),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Payment amount'),
    sa.Column('currency', sa.String(length=3), nullable=False, comment='Payment currency (ISO 4217)'),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'SUCCEEDED', 'FAILED', 'CANCELED', name='paymentstatusenum'), nullable=False, comment='Payment status'),
    sa.Column('payment_method', sa.Enum('CARD', 'PAYPAL', 'CRYPTO', 'BANK_TRANSFER', name='paymentmethodenum'), nullable=False, comment='Payment method used'),
    sa.Column('provider', sa.Enum('STRIPE', 'PAYPAL', 'LIQPAY', 'WAYFORPAY', name='paymentproviderenum'), nullable=False, comment='Payment provider'),
    sa.Column('provider_payment_id', sa.String(length=255), nullable=True, comment='External payment ID from provider'),
    sa.Column('provider_payment_intent_id', sa.String(length=255), nullable=True, comment='Payment intent ID (Stripe)'),
    sa.Column('additional_data', sa.JSON(), nullable=True, comment='Additional payment metadata as JSON'),
    sa.Column('failure_reason', sa.String(length=512), nullable=True, comment='Reason for payment failure'),
    sa.Column('refund_amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='Amount refunded'),
    sa.Column('refunded_at', sa.DateTime(), nullable=True, comment='Refund timestamp'),
    sa.Column('processed_at', sa.DateTime(), nullable=True, comment='Payment processing completion timestamp'),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_provider_payment_id'), 'payments', ['provider_payment_id'], unique=False)
    op.create_index(op.f('ix_payments_provider_payment_intent_id'), 'payments', ['provider_payment_intent_id'], unique=False)
    op.create_index(op.f('ix_payments_status'), 'payments', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payments_status'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider_payment_intent_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider_payment_id'), table_name='payments')
    op.drop_table('payments')
    # ### end Alembic commands ###
